# Alienvault plugin
# Author: Alienvault Team at devel@alienvault.com
# Plugin freeradius id:1762 version: 0.0.4
# Last modification: 2016-11-10 09:15
#
# Plugin Selection Info:
# FreeRADIUS:freeradius:-
#
# END-HEADER
#
#
# Description:
#

[DEFAULT]
plugin_id=1762


[config]
type=detector
enable=yes

source=log
location=/var/log/freeradius.log

create_file=false

process=
start=no
stop=no
startup=
shutdown=

[translation]

ERROR = 1
OK = 5
incorrect = 6
Ignoring = 7
Loaded = 8
Ready = 9
Debugger = 10
Signalled = 11
Exiting = 12
Logout = 13
Rejecting = 14
Discarding duplicate = 15
No outstanding = 16
rlm_eap_tls = 17
rlm_eap = 18
TLS Alert write = 19
TLS_accept = 20
TLS Alert read = 21
rlm_radutmp = 22
Received conflicting packet = 24
Either EAP-request timed out OR EAP-response to an unknown EAP-request = 25
No EAP session matching the State variable = 26
SSL3_GET_RECORD = 27
SSL3_READ_BYTES = 28
SSL_BYTES_TO_CIPHER_LIST = 29
SSL_read failed in a system call = 30
SSL_read failed inside of TLS = 31
No Accounting-Status-Type record = 32
The directive 'bind_adress' is deprecated = 33
The users session was previously rejected = 34
Unexpected ACK received = 35
control process exited = 36
what went wrong = 37
TLS = 38
This means you need to read the PREVIOUS messages in the debug output = 39
to find out the reason why the user was rejected = 40
Look for "reject" or "fail" = 41
SSL error error = 42
Identity does not match User-Name = 43
Logout entry for NAS Metaradius = 44
Login entry for NAS = 45
Logout entry for NAS = 44
Logout for NAS Metaradius = 44
Malformed EAP Message = 46
(re)connection attempt failed = 47
Can't contact LDAP server = 48
Attempting reconnect = 49
ldap_search() failed = 50
SSL3_GET_MESSAGE = 51
Invalid LM-Password = 52
Invalid NT-Password = 53
Malformed EAP packet = 46
_DEFAULT_ = 20000000

#       RULES:
[0001 - FreeRADIUS - Login]
event_type=event
precheck="Login"
regexp="(?P<date>\w{3}\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+).*?Login\s(?P<sid>OK|incorrect):?\s*(?:\((?P<reason>.*?)\):\s*)?\[(?:(?:host/)?(?P<client_host>[^@\./]*\.[^@\]/]*)|\s*(?:(?P<mac2>\w+:\w+:\w+:\w+:\w+:\w+)|(?P<username>[^@\]/]*))(?:@)?(?P<domain>[^\]/]*)(?:/(?P<pass>[^]]*))?)\]\s*\(from client\s*(?P<switch>\S+)\s*port\s*(?P<src_port>\d+)\s*(?:cli\s*(?P<mac_address>\S+)|via\s*(?P<protocol>\S+)\s*tunnel)?\)"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={resolv($device)}
src_ip={resolv($client_host)}
src_port={$src_port}
protocol={normalize_protocol($protocol)}
username={$username}
userdata1={$client_host}
userdata2={$reason}
userdata3={$mac_address}
userdata4={$switch}
userdata5={$domain}

[0002 - FreeRADIUS - Logout]
event_type=event
precheck="Logout"
regexp="(?P<date>\w{3}\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+).*?(?P<sid>Logout).*?for\sNAS\s(?P<src_ip>\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})\s*port\s*(?P<src_port>\d*)(?P<reason>\s*has\s*wrong\s*ID|,\s*but\sno\sLogin\srecord)"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={resolv($device)}
src_ip={resolv($src_ip)}
src_port={$src_port}
userdata1={$reason}

[0003 - FreeRADIUS - auth_log]
event_type=event
precheck="Invalid user"
regexp="(?P<date>\w{3}\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s*radiusd\S+:\s*(?P<sid>Invalid user):\s*\[(?P<username>[^/@]*)[/@](?P<domain>[^</]*)[/]*(?P<pass>[^]]+)\]\s*\(from client\s*(?P<switch>\S+)\s*port\s*(?P<src_port>\d+)\s*cli\s*(?P<mac_address>[^)]*)\)"
date={normalize_date($date)}
plugin_sid=23
device={resolv($device)}
src_port={$src_port}
username={$username}
userdata1={$domain}
userdata2={$pass}
userdata3={$switch}
userdata4={$mac_address}

[0004 - FreeRADIUS - auth_log]
event_type=event
precheck="auth_log"
regexp="(?P<date>\w{3}\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s*\S+:\s*\S+\s*(?:Invalid user \()?auth_log:\s*(?:ERROR:\s*)?(?P<msg1>.*?file)\s*(?P<filename>\S+):\s*(?P<error>[^:]*):\s*(?P<reason>[^):]*)(?:\):\s*\[(?:(?:host/)?(?P<client_host>[^@\.]*\.[^@\]/]*)|\s*(?:(?P<mac2>\w+:\w+:\w+:\w+:\w+:\w+)|(?P<username>[^@\]/]*))(?:@)?(?P<domain>[^\]/]*)(?:/(?P<pass>[^]]*))?)\]\s*\(from client\s*(?P<switch>\S+)\s*port\s*(?P<src_port>\d+)\s*cli\s*(?P<mac_address>[^)]*)\))?"
date={normalize_date($date)}
plugin_sid=2
device={resolv($device)}
src_ip={resolv($client_host)}
src_port={$src_port}
filename={$filename}
username={$username}
userdata1={$msg1}
userdata2={$error}
userdata3={$reason}
userdata4={$mac_address}
userdata5={$switch}
userdata6={$domain}
userdata7={$pass}

[0005 - FreeRADIUS - check item]
event_type=event
precheck="Check item"
regexp="(?P<date>\w{3}\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s*\S+:\s*\[(?P<filename>[^]]*)]:\d+\s*Check item\s*"(?P<item>[^"]*)"\s*(?:#011|\s*)(?P<msg>.*"(?P<realm>[^"]*)")"
date={normalize_date($date)}
plugin_sid=3
device={resolv($device)}
filename={$filename}
userdata1={$item}
userdata2={$msg}
userdata3={$realm}

[0006 - FreeRADIUS - request]
event_type=event
precheck="request"
regexp="(?P<date>\w{3}\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s*[^:]*:\s*(?P<sid>Rejecting|Received\sconflicting\spacket|Discarding\s*duplicate|No\soutstanding)\s(?:request\s(?P<request>\d+)?\s*|(?P<msg>due\sto\slack\sof\sany\sresponse\s|was\sfound\sfor\sproxy\sreply\s|due\sto\sunfinished\s)|from\s(?:client\s(?P<client>\S*)\s|home\sserver\s(?P<src_ip>\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})\s)port\s(?P<src_port>\d*)|\s*-\s(?P<id>ID:\s\d+)\s)*"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={resolv($device)}
src_ip={resolv($src_ip)}
src_port={$src_port}
userdata1={$client}
userdata2={$msg}
userdata3={$request}
userdata4={$id}

[0007 - FreeRADIUS - system fail]
event_type=event
precheck="radiusd"
regexp="(?P<date>\w{3}\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s*(?P<daemon>radiusd|systemd)[^:]*:\s*(?P<msg>.*?(?:radiusd|Failed|Duplicate|Received\sAccounting|Checking\sradiusd).*?(?:LSB|FAILED\]?|failed|code=(?P<code>\S+)\s*status=(?P<status>\S+)|virtual server "(?P<virtual_server>[^"]*)" in file\s*(?P<filename>\S+):\d+\s*and file\s*(?P<file2>\S+):\d+|Request\spacket\sfrom\s(?P<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}))(?:[^(]+\((?P<error>[^)]+)\))?)"
date={normalize_date($date)}
plugin_sid=4
device={resolv($device)}
src_ip={resolv($src_ip)}
filename={$filename}
userdata1={$daemon}
userdata2={$code}
userdata3={$status}
userdata4={$virtual_server}
userdata5={$file2}
userdata6={$error}

[0008 - FreeRADIUS - rml_eap]
event_type=event
precheck="rlm_eap"
regexp="(?P<date>\w{3}\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s*\S+:\s*\(?\d*\)?\s*(?P<module>rlm_eap):\s*(?:ERROR:)?\s*(?P<protocol>SSL|TLS)?(?:\serror|[^:]+)\s*(?:error:(?P<error>[^:]+))?:[^:]+:(?P<sid>[^:]+):(?P<msg>.*)"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={resolv($device)}
protocol={normalize_protocol($protocol)}
userdata1={$error}
userdata2={$msg}

[0009 - FreeRADIUS - Generic Error radiusd]
event_type=event
#precheck=""
regexp="(?P<date>\w{3}\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s*radiusd[^:]+:\s*(?:\([^)]+\)\s*eap_[^:]+:\s*ERROR:\s*)?(?P<msg>(?P<sid>Ignoring|Loaded|Ready|Debugger|Signalled|Exiting|(?P<protocol>TLS)[^:]*):?\s*(?:"(?P<mod>[^"]*)"\s*)?.*)"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={resolv($device)}
protocol={normalize_protocol($protocol)}
userdata1={$msg}
userdata2={$mod}

[0010 - FreeRADIUS - LDAP failed]
event_type=event
#precheck=""
regexp="(?P<date>\w{3}\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s*radius[^:]+:\s*\(?\d*\)?\s*(?P<module>rlm_ldap):\s(?:uid=(?P<uid>[^,]+),|ou=\S+,|o=(?P<o>[^,]+),|c=(?P<c>\S+)\sbind\sto\s(?:\S+\s)?(?P<ip>[^:]+):(?P<port>\d+)\s|failed:\s(?P<sid>Can't\scontact\sLDAP\sserver))+"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={resolv($device)}
src_ip={resolv($device)}
dst_ip={resolv($ip)}
dst_port={$port}
username={$uid}
userdata1={$uid}
userdata2={$c}
userdata3={$o}

[0011 - FreeRADIUS - TLS/SSL]
event_type=event
#precheck=""
regexp="(?P<date>\w{3}\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s*radius[^:]+:\s*\(?\d*\)?\s*(?P<module>\S+):\s*(?P<sid>(?P<protocol>SSL|TLS)?(?:_read\sfailed\s(?:in\sa\ssystem\scall|inside\sof\sTLS)|Unexpected\sACK\sreceived|Either\sEAP-request\stimed\sout\sOR\sEAP-response\sto\san\sunknown\sEAP-request|Attempting\sreconnect|ldap_search\(\)\sfailed|Invalid\s(?:LM-Password|NT-Password)|This\smeans\syou\sneed\sto\sread\sthe\sPREVIOUS\smessages\sin\sthe\sdebug\soutput|to\sfind\sout\sthe\sreason\swhy\sthe\suser\swas\srejected|Malformed\sEAP\sMessage|(?:Logout|Login)\s(?:entry\s)?for\sNAS(?:\sMetaradius)?|\(re\)connection\sattempt\sfailed|[^\d:(.,]+))(?:\s(?P<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})?\s*port\s(?P<src_port>\d+)(?:\shas\swrong\sID)?)?\s*[:(.,]*\s*(?:-\d+\),\s*)?(?P<msg>.*)"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={resolv($device)}
src_ip={resolv($src_ip)}
src_port={$src_port}
protocol={normalize_protocol($protocol)}
userdata1={$msg}

[0012 - FreeRADIUS - Match all]
event_type=event
#precheck=""
regexp="(?P<date>\w{3}\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s*radius[^:]+:\s*\(?\d*\)?\s*(?P<module>\S+):\s*(?P<sid>.*)\s+"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={resolv($device)}
