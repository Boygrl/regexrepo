# Alienvault plugin
# Author: Alienvault Team at devel@alienvault.com
# Plugin ibm-websphere id:1772 version: 0.0.1
# Last modification: 2016-08-30 09:00
#
# Plugin Selection Info:
# IBM:Websphere:-
#
# END-HEADER
#
# Accepted products:
# IBM WebSphere
#
# Description:
#
#

[DEFAULT]
plugin_id=1772


[config]
type=detector
enable=yes

source=log
location=/var/log/ibm-websphere.log

create_file=true

process=
start=no
stop=no
startup=
shutdown=

[translation]
#   Rule 1
File = 4
Redirect = 5
user = 6
#   Rule 2
An attempt is made to stop the = 7
An attempt is made to start the = 8
Stopping composition unit WebSphere = 9
Stopping application = 10
Application stopped = 11
Composition unit WebSphere = 12
Starting composition unit WebSphere = 13
Starting application = 14
Application = 15
#   Rule 3
No configuration found = 16
Cannot set header = 17
#   Rule 4
already closed = 18
file lock = 19
#   Rule 7
Configuration reload is starting = 20
Configuration reload is complete = 21
Loading Web = 22
Web Module Redirect = 3
Will create a new session context = 23
Servlet Message = 24
#   Rule 8
Parsing configuration = 25
Choosing bean = 26
Loading global messages = 27
Setting autowire = 28
Setting auto wire = 28
#   Default
_DEFAULT_ = 20000000

#   Event types readable translation
[event_types]
I = Info
O = System_out
A = Audit
W = Warning
E = Error

#######################################
#               RULES                 #
#######################################
#           Single line
[0001 - IBM WS - logouts]
event_type=event
precheck="logout"
regexp="\[(?P<date>\d+/\d+/\d+\s*\d+:\d+:\d+)[^]]*]\s*(?P<thread_id>\S+)\s*(?P<thread_name>\S+)\s*(?P<event_type>I)\s*(?P<class_name>\S+)\s*(?P<action>logout)\d+\s*(?:>>|(?P<layer>\S+):)\s*(?P<message>(?P<sid>File|Redirect|user)\s*(?:(?P<username>\S+)\slogging out, session being destroyed:\s*(?P<session_hash>\S+)|is set to\s(?P<redirect_status>true|false)|(?P<filename>\S+)\s*found:\s*(?P<filepath>\S+)))"
#date={normalize_date($date)}
plugin_sid={translate($sid)}
username={$username}
filename={$filename}
userdata1={$thread_id}
userdata2={$thread_name}
userdata3={translate2($event_type,$event_types)}
userdata4={$action}
userdata5={$layer}
userdata6={$message}
userdata7={$session_hash}
userdata8={$redirect_status}

[0002 - IBM WS - audit]
event_type=event
precheck=" A "
regexp="\[(?P<date>\d+/\d+/\d+\s*\d+:\d+:\d+)[^]]*\]\s*(?P<thread_id>\S+)\s*(?P<thread_name>\S+)\s*(?P<event_type>A)\s*(?P<code>\S+):\s*(?P<msg>(?P<sid>An attempt is made to stop the|An attempt is made to start the|Stopping composition unit WebSphere|Stopping application|Application stopped|Composition unit WebSphere|Starting composition unit WebSphere|Starting application|Application):?\s*(?:cuname=)?(?P<application>\S+)\s*(?:in BLA WebSphere:blaname=(?P<blaname>[^\s.]*)|Application build level:\s*(?P<app_build_level>\S+))?.*)"
#date={normalize_date($date)}
plugin_sid={translate($sid)}
userdata1={$thread_id}
userdata2={$thread_name}
userdata3={translate2($event_type,$event_types)}
userdata4={$application}
userdata5={$blaname}
userdata6={$msg}
userdata7={$app_build_level}
userdata8={$code}

[0003 - IBM WS - warning 1]
event_type=event
precheck=" W "
regexp="\[(?P<date>\d+/\d+/\d+\s*\d+:\d+:\d+)[^]]*]\s*(?P<thread_id>\S+)\s*(?P<thread_name>\S+)\s*(?P<event_type>W)\s*(?P<class>\S+)\s*(?P<event>setHeader|setDateHeader)?\s(?P<severity>\S+):?\s*(?P<details>(?P<sid>No configuration found|Cannot set header).*)"
#date={normalize_date($date)}
plugin_sid={translate($sid)}
userdata1={$thread_id}
userdata2={$thread_name}
userdata3={translate2($event_type,$event_types)}
userdata4={$class}
userdata5={$severity}
userdata6={$details}
userdata7={$event}

[0004 - IBM WS - warning 2]
event_type=event
precheck=" W "
regexp="\[(?P<date>\d+/\d+/\d+\s*\d+:\d+:\d+)[^]]*]\s*(?P<thread_id>\S+)\s*(?P<thread_name>\S+)\s*(?P<event_type>W)\s*(?:(?P<server>\S+)|Couldn.t flush user prefs):\s*(?:(?P<class>\S+):)?\s*(?P<details>.*(?P<sid>already closed|file lock))"
#date={normalize_date($date)}
plugin_sid={translate($sid)}
userdata1={$thread_id}
userdata2={$thread_name}
userdata3={translate2($event_type,$event_types)}
userdata4={$server}
userdata5={$class}
userdata6={$details}

[0005 - IBM WS - error]
event_type=event
precheck=" E "
regexp="\[(?P<date>\d+/\d+/\d+\s*\d+:\d+:\d+)[^]]*]\s*(?P<thread_id>\S+)\s*(?P<thread_name>\S+)\s*(?P<event_type>E)\s(?P<class>\S+)\s(?P<event>\S+)\s(?P<serv>\S+):\s*(?P<details>.*?handle\s*(?:/public/|(?P<path>\S+))\s*.*)"
#date={normalize_date($date)}
plugin_sid=1
filename={$path}
userdata1={$thread_id}
userdata2={$thread_name}
userdata3={translate2($event_type,$event_types)}
userdata4={$class}
userdata5={$event}
userdata6={$details}
userdata7={$serv}

[0006 - IBM WS - refresh]
event_type=event
precheck="repository refresh"
regexp="\[(?P<date>\d+/\d+/\d+\s*\d+:\d+:\d+)[^]]*]\s*(?P<thread_id>\S+)\s*(?P<thread_name>\S+)\s*(?P<event_type>I)\s*(?P<class_name>\S+)\s*(?P<action>\S+)\s*(?P<layer>\S+)\s*repository refresh"
#date={normalize_date($date)}
plugin_sid=2
userdata1={$thread_id}
userdata2={$thread_name}
userdata3={translate2($event_type,$event_types)}
userdata4={$action}
userdata5={$layer}

[0007 - IBM WS - servlets]
event_type=event
#precheck=""
regexp="\[(?P<date>\d+/\d+/\d+\s*\d+:\d+:\d+)[^]]*]\s*(?P<thread_id>\S+)\s*(?P<thread_name>\S+)\s*(?P<event_type>I)\s*(?:\[:]|(?P<class_name>\S+))\s*(?P<action>\S*)\s(?P<code>\S+):\s*(?P<msg>(?P<sid>Configuration reload is (?:starting|complete)|Loading Web|Web Module Redirect|Will create a new session context|Servlet Message).*?(?:bus\s*(?P<bus>\S+)\.|messaging engine\s*(?P<msg_eng>\S+)\.|Module:\s*(?P<module_action>\S+)\.|default_host\[(?P<port_list>\S+)]\.|application key\s*(?P<host>.*?)/(?P<app>\S+)|\[(?P<servlet>[^\]]*)]:\.action:\s*(?P<result>.*)))"
#date={normalize_date($date)}
plugin_sid={translate($sid)}
userdata1={$servlet}
userdata2={$thread_name}
userdata3={translate2($event_type,$event_types)}
userdata4={$class_name}
userdata5={$action}
userdata6={$msg}
userdata7={$bus}
userdata8={$port_list}
userdata9={$app}

[0008 - IBM WS - other info]
event_type=event
#precheck=""
regexp="\[(?P<date>\d+/\d+/\d+\s*\d+:\d+:\d+)[^]]*]\s*(?P<thread_id>\S+)\s*(?P<thread_name>\S+)\s+(?P<event_type>I)\s*(?P<class>\S+)\s*(?P<severity>\S+)\s*(?P<msg>(?P<sid>Parsing configuration|Choosing bean|Loading global messages|Setting auto\s*wire)\s*(?:(?:file|from)\s*\[?(?P<file_path>[^\s\]]*)]?|\((?P<apache_spun>\S+)\)\s*for\s\S+\s(?P<interface>\S+)|strategy to name))"
#date={normalize_date($date)}
plugin_sid={translate($sid)}
filename={$file_path}
userdata1={$thread_id}
userdata2={$thread_name}
userdata3={translate2($event_type,$event_types)}
userdata4={$apache_spun}
userdata5={$interface}
userdata6={$msg}
userdata7={$class}
userdata8={$severity}

#       Multi-line
[0020 - IBM WS - System out infos]
event_type=event
precheck=" O "
regexp="\[(?P<date>\d+/\d+/\d+\s*\d+:\d+:\d+)[^]]*]\s*(?P<thread_id>\S+)\s*(?P<thread_name>\S+)\s+(?P<event_type>O)\s*(?P<non_ibm_date>\d+-\d+-\d+\s*\d+:\d+:\d+),\d+.*?thread:\s*(?P<thread>\S+)\s*:\s*(?P<thread_number>\d+).*\n(?P<function>.*?)\s*=>\s*\(line:\s*(?P<line>\d+).*\n.*\s(?P<location>\S+)"
date={normalize_date($non_ibm_date)}
plugin_sid=27
userdata1={$thread_id}
userdata2={$thread}
userdata3={translate2($event_type,$event_types)}
userdata4={$thread_number}
userdata5={$function}
userdata6={$line}
userdata7={$location}

[0021 - IBM WS - logon denied]
event_type=event
precheck="logon denied"
regexp="ORA-01017: invalid\susername/password;\slogon denied\n\S+\sSQL State = (?P<sql_state>\d+),\sError Code = (?P<error_code>\S+)"
plugin_sid=29
userdata1={$sql_state}
userdata2={$error_code}

#######################################
#               GENERIC               #
#######################################

[0099 - IBM WS - System outs]
event_type=event
precheck=" O "
regexp="\[(?P<date>\d+/\d+/\d+\s*\d+:\d+:\d+)[^]]*]\s*(?P<thread_id>\S+)\s*(?P<thread_name>\S+)\s+(?P<event_type>O)\s*(?P<msg>.*)"
#date={normalize_date($date)}
plugin_sid=99
userdata1={$thread_id}
userdata2={$thread_name}
userdata3={translate2($event_type,$event_types)}
userdata4={$msg}

[9999 - IBM WS - Catch all]
event_type=event
#precheck=""
regexp="\[(?P<date>\d+/\d+/\d+\s*\d+:\d+:\d+)[^]]*]\s*(?P<thread_id>\S+)\s*(?P<thread_name>\S+)\s+(?P<event_type>\S)\s*(?P<msg>.*)"
#date={normalize_date($date)}
plugin_sid=20000000
userdata1={$thread_id}
userdata2={$thread_name}
userdata3={translate2($event_type,$event_types)}
userdata4={$msg}
