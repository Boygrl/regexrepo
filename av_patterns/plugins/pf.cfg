# Alienvault plugin
# Author: Alienvault Team at devel@alienvault.com
# Plugin pf id:1560 version: 0.0.3
# Last modification: 2015-12-07 12:00
#
# Plugin Selection Info:
# OpenBSD:PF Packet Filter:-
#
# END-HEADER
# Accepted products:
# openbsd - pf -
# Description:
# 
# http://www.openbsd.org/cgi-bin/man.cgi?query=pflogd&sektion=8
# 
#  Copyright (C) 2008 Stephan Buys <sbuys@exponant.com>
# 
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
# 
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
# 
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
#   This plugin works with logs generated as follows:
#   #!/bin/sh
#   PFLOG=/var/log/pflog
#   FILE=/var/log/pflog5min.$(date "+%Y%m%d%H%M")
#   kill -ALRM $(cat /var/run/pflogd.pid)
#   if [ -r $PFLOG ] && [ $(stat -f %z $PFLOG) -gt 24 ]; then
#      mv $PFLOG $FILE
#      kill -HUP $(cat /var/run/pflogd.pid)
#      tcpdump -n -e -s 1024 -r $FILE | logger -t pf -p security.info
#      rm $FILE
#   fi
# 
#
#

[DEFAULT]
plugin_id=1560

[config]
type=detector
enable=yes

source=log
location=/var/log/messages

create_file=false

process=
start=no
stop=no
startup=
shutdown=

[translation]
accept=1
pass=1
block=2
request=3
reply=4
unreachport=5
unreach=6
timexceed=7


[0001 - pfSense-IPv4]
event_type=event
precheck=",4,"
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<hostname>\S+)\s+filterlog:\s+(?P<rule_num>[^,]*),(?P<sub_rule_num>[^,]*),(?:[^,]*),(?:[^,]*),(?P<iface>[^,]*),(?P<reason>[^,]*),(?P<action>[^,]*),(?P<direction>[^,]*),(?P<ip_version>[^,]*),(?:[^,]*),(?:[^,]*),(?P<ttl>[^,]*),(?P<id>[^,]*),(?P<offset>[^,]*),(?:[^,]*),(?:[^,]*),(?P<proto>tcp|igmp|udp),(?P<length>[^,]*),(?P<src_ip>[^,]*),(?P<dst_ip>[^,]*),((?P<src_port>\d+),)?((?P<dst_port>\d+),)?"
date={normalize_date($date)}
plugin_sid={translate($action)}
device={resolv($hostname)}
protocol={$proto}
src_ip={resolv($src_ip)}
dst_ip={resolv($dst_ip)}
src_port={$src_port}
dst_port={$dst_port}
userdata1={$iface}
userdata2={$reason}
userdata3={$direction}
userdata4={$rule_num}
userdata5={$sub_rule_num}
userdata6={$ip_version}
userdata7={$ttl}
userdata8={$offset}
userdata9={$length}

[0002 - pfSense-IPv4 icmp]
event_type=event
precheck="icmp"
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<hostname>\S+)\s+filterlog:\s+(?P<rule_num>[^,]*),(?P<sub_rule_num>[^,]*),(?:[^,]*),(?:[^,]*),(?P<iface>[^,]*),(?P<reason>[^,]*),(?P<action>[^,]*),(?P<direction>[^,]*),(?P<ip_version>[^,]*),(?:[^,]*),(?:[^,]*),(?P<ttl>[^,]*),(?:[^,]*),(?P<offset>[^,]*),(?:[^,]*),(?:[^,]*),(?P<proto>icmp),(?P<length>[^,]*),(?P<src_ip>[^,]*),(?P<dst_ip>[^,]*),(?P<icmp_type>request|reply),(?P<icmp_id>[^,]*),(?P<icmp_seq>[^,]*)"
date={normalize_date($date)}
plugin_sid={translate($icmp_type)}
device={resolv($hostname)}
protocol={$proto}
src_ip={resolv($src_ip)}
dst_ip={resolv($dst_ip)}
userdata1={$iface}
userdata2={$reason}
userdata3={$action}
userdata4={$direction}
userdata5={$rule_num}
userdata6={$sub_rule_num}
userdata7={$icmp_id}
userdata8={$ttl}
userdata9={$icmp_seq}

[0003 - pfSense-IPv4 icmp]
event_type=event
precheck="icmp"
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<hostname>\S+)\s+filterlog:\s+(?P<rule_num>[^,]*),(?P<sub_rule_num>[^,]*),(?P<anchor>[^,]*),(?P<tracket>[^,]*),(?P<iface>[^,]*),(?P<reason>[^,]*),(?P<action>[^,]*),(?P<direction>[^,]*),(?P<ip_version>[^,]*),(?:[^,]*),(?:[^,]*),(?P<ttl>[^,]*),(?:[^,]*),(?P<offset>[^,]*),(?:[^,]*),(?P<proto_id>[^,]*),(?P<proto>icmp),(?P<length>[^,]*),(?P<src_ip>[^,]*),(?P<dst_ip>[^,]*),(?P<icmp_type>unreachport|unreach|timexceed)(?P<data>.*)"
date={normalize_date($date)}
plugin_sid={translate($icmp_type)}
device={resolv($hostname)}
protocol={$proto}
src_ip={resolv($src_ip)}
dst_ip={resolv($dst_ip)}
userdata1={$iface}
userdata2={$reason}
userdata3={$action}
userdata4={$direction}
userdata5={$rule_num}
userdata6={$sub_rule_num}
userdata7={$ip_version}
userdata8={$offset}
userdata9={$data}

[0004 - pfSense-IPv6 MLDv2 Reports]
event_type=event
precheck=",ff02::16,"
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<hostname>\S+)\s+filterlog:\s+(?P<rule_num>[^,]*),(?P<sub_rule_num>[^,]*),(?P<anchor>[^,]*),(?P<tracket>[^,]*),(?P<iface>[^,]*),(?P<reason>[^,]*),(?P<action>[^,]*),(?P<direction>[^,]*),(?P<ip_version>[^,]*),(?P<class>[^,]*),(?P<flow_label>[^,]*),(?P<hop_limit>[^,]*),Options,(?:[^,]*,){2}(?P<ipv6_local_addr>[^,]*),(?P<ipv6_mldv2_addr>[^,]*)"
date={normalize_date($date)}
plugin_sid={translate($action)}
device={resolv($hostname)}
userdata1={$iface}
userdata2={$reason}
userdata3={$ip_version}
userdata4={$direction}
userdata5={$rule_num}
userdata6={$sub_rule_num}
userdata7={$class}
userdata8={$hop_limit}
userdata9={$ipv6_local_addr}

[0005 - pfSense-IPv6]
event_type=event
precheck=",6,"
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<hostname>\S+)\s+filterlog:\s+(?P<rule_num>[^,]*),(?P<sub_rule_num>[^,]*),(?P<anchor>[^,]*),(?P<tracket>[^,]*),(?P<iface>[^,]*),(?P<reason>[^,]*),(?P<action>[^,]*),(?P<direction>[^,]*),(?P<ip_version>[^,]*),(?P<class>[^,]*),(?P<flow_label>[^,]*),(?P<hop_limit>[^,]*),(?P<proto>[^,]*),(?P<proto_id>[^,]*)"
date={normalize_date($date)}
plugin_sid={translate($action)}
device={resolv($hostname)}
protocol={$proto}
userdata1={$iface}
userdata2={$reason}
userdata3={$ip_version}
userdata4={$direction}
userdata5={$rule_num}
userdata6={$sub_rule_num}
userdata7={$class}
userdata8={$hop_limit}
userdata9={$flow_label}

[0006-pf-icmp_echo]
event_type=event
regexp=(\SYSLOG_DATE)\s+(?P<sensor>\S+)\s+\w+\:\s+(\TIME)\.\d+\s+rule\s+\d+\/\d+\(\w+\)\:\s+(?P<action>\w+)\s+in\s+on\s+(?P<interface>[\w\d]+)\:\s+(?P<src_ip>\IPV4)\s+\>\s+(?P<dst_ip>\IPV4)\:
date={normalize_date($1)}
device={resolv($sensor)}
src_ip={$src_ip}
dst_ip={$dst_ip}
plugin_sid={translate($action)}
protocol=icmp
interface={$interface}

[0007-pf-noprotocol]
event_type=event
regexp=(\SYSLOG_DATE)\s+(?P<sensor>\S+)\s+\w+\:\s+(\TIME)\.\d+\s+rule\s+\d+\/\d+\(\w+\)\:\s+(?P<action>\w+)\s+in\s+on\s+(?P<interface>[\w\d]+)\:\s+(?P<src_ip>\IPV4)\.(?P<src_port>\d+)\s+\>\s+(?P<dst_ip>\IPV4)\.(?P<dst_port>\d+)\:
date={normalize_date($1)}
device={resolv($sensor)}
src_ip={$src_ip}
src_port={$src_port}
dst_ip={$dst_ip}
dst_port={$dst_port}
plugin_sid={translate($action)}
interface={$interface}

[0099 - pf - ##GENERIC-RULE##]
event_type=event
regexp=(\SYSLOG_DATE)\s+(?P<sensor>\S+)\s+\w+\:\s+\d+\.*\s*\d*\s+rule\s+\d+\/\d+\(\w+\)\:\s+(?P<action>\w+)\s+in\s+on\s+(?P<interface>[\w\d]+)\:.*?proto\:*\s+(?P<protocol>\w+).*?(?P<src_ip>\IPV4)\.(?P<src_port>\d+)\s+\>\s+(?P<dst_ip>\IPV4)\.(?P<dst_port>\d+):
date={normalize_date($1)}
device={resolv($sensor)}
src_ip={$src_ip}
src_port={$src_port}
dst_ip={$dst_ip}
dst_port={$dst_port}
plugin_sid={translate($action)}
protocol={$protocol}
interface={$interface}
