# Alienvault plugin
# Author: Alienvault Team at devel@alienvault.com
# Plugin suhosin id:1685 version: 0.0.2
# Last modification: 2015-05-13 16:11
#
# Plugin Selection Info:
# Suhosin:Suhosin PHP Security Extension:-
#
# END-HEADER
# Accepted products:
# hardened-php - suhosin -
# Description:
# 
# Advanced protection system for php.
# URL: http://www.hardened-php.net/suhosin/
#
#
[DEFAULT]
plugin_id=1685

[config]
type=detector
enable=yes

source=log
location=/var/log/syslog

create_file=false

process=
start=no   
stop=no
startup=
shutdown=


[1-include-filename]
event_type=event
regexp=(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d) (?P<sensor>\S+)\s+[^\s]+ ALERT - Include filename ..(?P<url>[^']+)'. is an URL that is not allowed .attacker '(?P<src_ip>[^']+)', file '(?P<filename>[^']+)'.*
date={normalize_date($date)}
plugin_sid=1
src_ip={resolv($src_ip)}
dst_ip={resolv($sensor)}
userdata4={$url}
filename={$filename}

[2-ascii-null]
event_type=event
regexp=(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d) (?P<sensor>\S+)\s+[^\s]+ ALERT - ASCII-NUL chars not allowed within request variables - dropped variable '(?P<variable>\S+)' .attacker '(?P<src_ip>[^']+)', file '(?P<filename>[^']+)'.*
date={normalize_date($date)}
plugin_sid=2
src_ip={resolv($src_ip)}
dst_ip={resolv($sensor)}
filename={$filename}
userdata1={$variable}

[3-maximun-execution]
event_type=event
regexp=(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d) (?P<sensor>\S+)\s+[^\s]+ ALERT - maximum execution depth reached - script terminated .attacker '(?P<src_ip>[^']+)', file '(?P<filename>[^']+)'.*
date={normalize_date($date)}
plugin_sid=3
src_ip={resolv($src_ip)}
dst_ip={resolv($sensor)}
filename={$filename}

[4-forbidden-variable]
event_type=event
regexp=(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d) (?P<sensor>\S+)\s+[^\s]+ ALERT - tried to register forbidden variable '(?P<variable>\S+)' through (\S+) variables .attacker '(?P<src_ip>[^']+)', file '(?P<filename>[^']+)'.*
date={normalize_date($date)}
plugin_sid=4
src_ip={resolv($src_ip)}
dst_ip={resolv($sensor)}
filename={$filename}
userdata1={$variable}

[5-memory_limit]
event_type=event
regexp=(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d) (?P<sensor>\S+)\s+[^\s]+ ALERT - script tried to increase memory_limit to (?P<variable>[\d]+) bytes which is above the allowed value .attacker '(?P<src_ip>[^']+)', file '(?P<filename>[^']+)'.*
date={normalize_date($date)}
plugin_sid=5
src_ip={resolv($src_ip)}
dst_ip={resolv($sensor)}
filename={$filename}
userdata1={$variable}

[6-configured-variable-lenght]
event_type=event
regexp=(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d) (?P<sensor>\S+)\s+[^\s]+ ALERT – configured (?P<variable>\S+) variable (?P<variable2>\S+) length limit exceeded – dropped variable '(?P<variable3>[^']+)' .attacker '(?P<src_ip>[^']+)', file '(?P<filename>[^']+)'.*
date={normalize_date($date)}
plugin_sid=6
src_ip={resolv($src_ip)}
dst_ip={resolv($sensor)}
filename={$filename}
userdata1={$variable3}
userdata2={$variable2}
userdata3={$variable}

[7-canary-mismatch]
event_type=event
regexp=(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d) (?P<sensor>\S+)\s+[^\s]+ ALERT - canary mismatch on (?P<variable>\S+) - heap overflow detected .attacker '(?P<src_ip>[^']+)', file '(?P<filename>[^']+)'.*
date={normalize_date($date)}
plugin_sid=7
src_ip={resolv($src_ip)}
dst_ip={resolv($sensor)}
filename={$filename}
userdata1={$variable}

[8-linked-list]
event_type=event
regexp=(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d) (?P<sensor>\S+)\s+[^\s]+ ALERT - linked list corrupt on (?P<variable>\S+) - heap corruption detected .attacker '(?P<src_ip>[^']+)', file '(?P<filename>[^']+)'.*
date={normalize_date($date)}
plugin_sid=8
src_ip={resolv($src_ip)}
dst_ip={resolv($sensor)}
filename={$filename}
userdata1={$variable}

[9-include-filename-long]
event_type=event
regexp=(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d) (?P<sensor>\S+)\s+[^\s]+ ALERT - Include filename ..(?P<url>[^']+)'. is too long .attacker '(?P<src_ip>[^']+)', file '(?P<filename>[^']+)'.*
date={normalize_date($date)}
plugin_sid=9
src_ip={resolv($src_ip)}
dst_ip={resolv($sensor)}
filename={$filename}

[ZZZZ - ##GENERIC-RULE##]
event_type=event
regexp=(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d) (?P<sensor>\S+)\s+[^\s]+ ALERT - .*
date={normalize_date($date)}
plugin_sid=10
dst_ip={resolv($sensor)}







