# Alienvault plugin
# Author: Alienvault Team at devel@alienvault.com
# Plugin ruckus id:1745 version: 0.0.3
# Last modification: 2016-07-06 12:20
#
# Plugin Selection Info:
# Ruckus:ZoneDirector:-
#
# END-HEADER
# Accepted products:
#
# Description:
#
#
#

[DEFAULT]
plugin_id=1745

[config]
type=detector
enable=yes

source=log
location=/var/log/ruckus.log

create_file=true

process=
start=no
stop=no
startup=
shutdown=

[translation]
joins=1
rejoins=2
leave=3
disconnects from=4
disassociated from=5
roams from=6
roams out to=7
unblocked=8
fails authentication=9
repeatedly fails authentication=10
fails to join=11
logs in=20
logs in failure=21
Rogue=30
ad-hoc network=31

Received SNMP packet(s) from UDP=32
joins with uptime=33
warm boot successfully=34
is online=35
reset to disable mesh function=36
radio=37
acsrvc_receive()=38
SIOCDARP failed=39
complete updating ap cfg to emfd=40
IPC connection close=41
Deplete everything in the pipe=42
handleRequest() failed or done=43
FileCache synced=44
heartbeats lost=45
detects interference on radio=46
cold boot successfully=47
detects radar burst on radio=48
has been deployed on radio=49
get ap info=50
version is not v3=51
call stamgr_cfg_adpt_get_info_snmp fail=52
sta is not available=53

_DEFAULT_=20000000


[0001 - User fails auth]
event_type=event
precheck="fails authentication"
regexp="(?P<date>\SYSLOG_DATE)\s+(?P<device>\S+).*?User\[(?P<srcmac>[^\]]*)\]\s+(?P<action>fails\sauthentication).*?WLAN\[(?P<wlan>[^\]]*)\]\s+(?:from|at)\s+AP\[(?P<ap>[^\]]*)\].*?for\s+\[(?P<time>[^\]]*)\]"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($action)}
userdata1={$srcmac}
userdata2={$wlan}
userdata3={$ap}
userdata4={$time}

[0002 - User WLAN AP]
event_type=event
precheck="User"
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<device>\S+).*?User\[(?P<srcmac>[^\]]*)\]\s+(?P<action>joins|rejoins|leave|disconnects\sfrom|disassociated\sfrom|fails\sto\sjoin)\s+WLAN\[(?P<wlan>[^\]]*)\]\s+(?:from|at)\s+AP\[(?P<ap>[^\]]*)\](?:\s+due\sto\s+(?P<reason>.*)\.)?"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($action)}
userdata1={$srcmac}
userdata2={$wlan}
userdata3={$ap}
userdata4={$reason}

[0003 - Roaming]
event_type=event
precheck="User"
regexp="(?P<date>\SYSLOG_DATE)\s+(?P<device>\S+).*?AP\[(?P<ap>[^\]]*)\]\s+radio\s*\[(?P<radio>[^\]]*)\]\s+detects\s+User\[(?P<srcmac>[^\]]*)\]\s+in\s+WLAN\[(?P<wlan>[^\]]*)\]\s+(?P<action>roams\s(?:out\s+to|from))\s+AP\[(?P<ap2>[^\]]*)\]"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($action)}
userdata1={$srcmac}
userdata2={$wlan}
userdata3={$ap}
userdata4={$ap2}

[0004 - New Rogue]
event_type=event
precheck="A new"
regexp="(?P<date>\SYSLOG_DATE)\s+(?P<device>\S+).*?A\s+new\s+(?P<detected>Rogue|ad-hoc\s+network)\s*\[(?P<mac>[^\]]*)\]\s+with\s+SSID\[(?P<ssid>[^\]]*)\]\s+is\s+detected"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($detected)}
userdata1={$mac}
userdata2={$ssid}

[0005 - Admin login]
event_type=event
precheck="Admin"
regexp="(?P<date>\SYSLOG_DATE)\s+(?P<device>\S+).*?Admin\[(?P<username>[^\]]*)\]\s+(?P<action>logs\sin(?:\sfailure)?)\s+from\s+\[(?P<srcip>[^\]]*)\]"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($action)}
username={$username}
src_ip={$srcip}

[0006 - Temporary blocking]
event_type=event
precheck="Temporary"
regexp="(?P<date>\SYSLOG_DATE)\s+(?P<device>\S+).*?Temporary\s+blocking\s+of\s+Client\[(?P<mac>[^\]]*)\]\s+(?P<action>unblocked)"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($action)}
userdata1={$mac}


[0007 - Received]
event_type=event
precheck="Received"
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s+(?:[^:]+:\s)(?P<action>[^:]+):\s\[(?P<src_ip>[^]]+)\]:(?P<src_port>\d+)"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($action)}
src_ip={resolv($src_ip)}
src_port={$src_port}


[0008 - Ap radio]
event_type=event
precheck="radio"
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s+(?:[^:]+:\s)(?:[^:]+:)AP[\s[](?P<ap>[^\]\s]+)[\s\]]+(?P<action>radio|detects\sinterference\son\sradio|detects\sinterference\son\sradio|detects radar burst on radio)[\s\(\[]+(?P<radio>[^\)\]]+)[\)\]]"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($action)}
userdata1={$ap}
userdata2={$radio}


[0009 - AP[]
event_type=event
precheck="AP["
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s+(?:[^:]+:\s)(?:[^:]+:)AP\[(?P<ap>[^]]+)\]\s(?P<action>joins\swith\suptime|reset to disable mesh function|heartbeats lost|cold boot successfully|[^.,]+)(\s\[(?P<time>\d+)\])?"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($action)}
userdata1={$ap}
userdata2={$time}



[0010 - VAP unmatched]
event_type=event
precheck="acsrvc_receive()"
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s+(?:[^:]+:\s)(?P<action>[^:]+):(?P<mac>\w{1,2}:\w{1,2}:\w{1,2}:\w{1,2}:\w{1,2}:\w{1,2})\sstation\sof\sVAP\s(?P<vap>[^,]+),\slast\sstats\sreported\sfrom\sunmatched\sVAP\s(?P<vap2>\S+)"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($action)}
userdata1={$mac}
userdata2={$vap}
userdata3={$vap2}


[0011 - WLAN AP BSSID]
event_type=event
precheck="BSSID"
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<device>\S+).*?WLAN\[(?P<wlan>[^]]+)\]\s(?P<action>has been deployed on radio)\s\[(?P<radio>[^]]+)\] of AP\[(?P<ap>[^]]+)\] with BSSID\[(?P<bssid>[^]]+)\]"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($action)}
userdata1={$wlan}
userdata2={$radio}
userdata3={$ap}
userdata4={$bssid}


[0012 - General]
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s+(?:[^:]+:\s)(?:[^:]+):.*?(?P<action>SIOCDARP\sfailed|complete\supdating\sap\scfg\sto\semfd|IPC\sconnection\sclose|Deplete\severything\sin\sthe\spipe|handleRequest\(\)\sfailed or done|FileCache synced|sta\sis\snot\savailable)(?:[,.]\serrno=(?P<error>\d+))?"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($action)}
userdata1={$error}


[0013 - version]
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s+(?:[^:]+:\s)(?P<action>call\sstamgr_cfg_adpt_get_info_snmp\sfail|[^:,]+)(?:,deny the operation,ver:(?P<version>\d+)|:\s\[(?P<src_ip>[^]]+)\]:(?P<src_port>\d+))?(?:[,.]\serrno=(?P<error>\d+))?"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($action)}
src_ip={resolv($src_ip)}
src_port={$src_port}
userdata1={$error}
userdata2={$version}


[0014 - Join or auth failures]
event_type=event
precheck="fails"
regexp="(?P<date>\SYSLOG_DATE)\s+(?P<device>\S+).*?User\[(?P<srcmac>[^\]]*)\]\s+(?P<action>fails\sto\sjoin|repeatedly\sfails\sauthentication).*?WLAN\[(?P<wlan>[^\]]*)\]\s+(?:from|at)\s+AP\[(?P<ap>[^\]]*)\]"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($action)}
userdata1={$srcmac}
userdata2={$wlan}
userdata3={$ap}


[0099 - Generic]
event_type=event
regexp="(?P<date>\SYSLOG_DATE)\s+(?P<device>\S+)\s+(?:\S+:)\s(?P<msg>.*)"
date={normalize_date($date)}
device={resolv($device)}
plugin_sid={translate($msg)}
